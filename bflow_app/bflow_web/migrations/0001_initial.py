# Generated by Django 2.2.4 on 2019-08-06 07:52

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Calculate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_order_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('order_number', models.CharField(blank=True, max_length=50, null=True)),
                ('channel_order_number', models.CharField(blank=True, max_length=50, null=True)),
                ('order_state', models.CharField(blank=True, max_length=50, null=True)),
                ('delivery_complete_at', models.DateField(blank=True, null=True)),
                ('provide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('channel', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('order_amount', models.IntegerField(blank=True, null=True)),
                ('fees', models.FloatField(blank=True, null=True)),
                ('calculate', models.IntegerField(blank=True, null=True)),
                ('channel_calculate', models.IntegerField(blank=True, null=True)),
                ('complete_at', models.DateField(blank=True, null=True)),
                ('matching_at', models.DateField(blank=True, null=True)),
                ('week', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('margin', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_order_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('order_number', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_at', models.DateField(blank=True, null=True)),
                ('order_state', models.CharField(blank=True, max_length=50, null=True)),
                ('claim', models.CharField(blank=True, max_length=50, null=True)),
                ('provide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_option', models.CharField(blank=True, max_length=255, null=True)),
                ('channel', models.CharField(blank=True, max_length=50, null=True)),
                ('product_number', models.CharField(blank=True, max_length=50, null=True)),
                ('product_amount', models.IntegerField(blank=True, null=True)),
                ('option_amount', models.IntegerField(blank=True, null=True)),
                ('seller_discount', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('total_amount', models.IntegerField(blank=True, null=True)),
                ('delivery_at', models.DateField(blank=True, null=True)),
                ('delivery_complete', models.DateField(blank=True, null=True)),
                ('order_complete_at', models.DateField(blank=True, null=True)),
                ('auto_complete_at', models.DateField(blank=True, null=True)),
                ('category_number', models.CharField(blank=True, max_length=50, null=True)),
                ('buyer_email', models.CharField(blank=True, max_length=50, null=True)),
                ('buyer_gender', models.CharField(blank=True, max_length=50, null=True)),
                ('buyer_age', models.CharField(blank=True, max_length=50, null=True)),
                ('crawler', models.CharField(blank=True, max_length=50, null=True)),
                ('calculate', models.IntegerField(blank=True, null=True)),
                ('calculate_channel', models.IntegerField(blank=True, null=True)),
                ('margin', models.IntegerField(blank=True, null=True)),
                ('profit', models.FloatField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('week', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sellstatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, unique=True)),
                ('week', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('brich_total_amount', models.IntegerField(blank=True, null=True)),
                ('brich_qty', models.IntegerField(blank=True, null=True)),
                ('brich_ct', models.IntegerField(blank=True, null=True)),
                ('brich_margin', models.IntegerField(blank=True, null=True)),
                ('brich_profit', models.FloatField(blank=True, null=True)),
                ('gmarket_total_amount', models.IntegerField(blank=True, null=True)),
                ('gmarket_qty', models.IntegerField(blank=True, null=True)),
                ('gmarket_ct', models.IntegerField(blank=True, null=True)),
                ('gmarket_margin', models.IntegerField(blank=True, null=True)),
                ('gmarket_profit', models.FloatField(blank=True, null=True)),
                ('auction_total_amount', models.IntegerField(blank=True, null=True)),
                ('auction_qty', models.IntegerField(blank=True, null=True)),
                ('auction_ct', models.IntegerField(blank=True, null=True)),
                ('auction_margin', models.IntegerField(blank=True, null=True)),
                ('auction_profit', models.FloatField(blank=True, null=True)),
                ('st_total_amount', models.IntegerField(blank=True, null=True)),
                ('st_qty', models.IntegerField(blank=True, null=True)),
                ('st_ct', models.IntegerField(blank=True, null=True)),
                ('st_margin', models.IntegerField(blank=True, null=True)),
                ('st_profit', models.FloatField(blank=True, null=True)),
                ('wemakeprice_total_amount', models.IntegerField(blank=True, null=True)),
                ('wemakeprice_qty', models.IntegerField(blank=True, null=True)),
                ('wemakeprice_ct', models.IntegerField(blank=True, null=True)),
                ('wemakeprice_margin', models.IntegerField(blank=True, null=True)),
                ('wemakeprice_profit', models.FloatField(blank=True, null=True)),
                ('interpark_total_amount', models.IntegerField(blank=True, null=True)),
                ('interpark_qty', models.IntegerField(blank=True, null=True)),
                ('interpark_ct', models.IntegerField(blank=True, null=True)),
                ('interpark_margin', models.IntegerField(blank=True, null=True)),
                ('interpark_profit', models.FloatField(blank=True, null=True)),
                ('coupang_total_amount', models.IntegerField(blank=True, null=True)),
                ('coupang_qty', models.IntegerField(blank=True, null=True)),
                ('coupang_ct', models.IntegerField(blank=True, null=True)),
                ('coupang_margin', models.IntegerField(blank=True, null=True)),
                ('coupang_profit', models.FloatField(blank=True, null=True)),
                ('ssg_total_amount', models.IntegerField(blank=True, null=True)),
                ('ssg_qty', models.IntegerField(blank=True, null=True)),
                ('ssg_ct', models.IntegerField(blank=True, null=True)),
                ('ssg_margin', models.IntegerField(blank=True, null=True)),
                ('ssg_profit', models.FloatField(blank=True, null=True)),
                ('g9_total_amount', models.IntegerField(blank=True, null=True)),
                ('g9_qty', models.IntegerField(blank=True, null=True)),
                ('g9_ct', models.IntegerField(blank=True, null=True)),
                ('g9_margin', models.IntegerField(blank=True, null=True)),
                ('g9_profit', models.FloatField(blank=True, null=True)),
            ],
        ),
    ]
